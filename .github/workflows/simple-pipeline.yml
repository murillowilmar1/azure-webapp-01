name: CI Pipeline with Dependency Installation and Pull Request Validation

# Ejecutar cuando se hace push o pull request
on:
  push:
    branches:
      - main  # Se ejecuta cuando se hace push a la rama 'main'
  pull_request:
    branches:
      - main  # También se ejecuta en pull requests sobre la rama 'main'

jobs:
  # 1. Job: Instalación de dependencias
  build:
    runs-on: ubuntu-latest

    steps:
      # Clonar el repositorio
      - name: 'Checkout code'
        uses: actions/checkout@v4

      # Configurar Python y crear entorno virtual
      - name: 'Set up Python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # Instalar dependencias
      - name: 'Install dependencies'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

  # 2. Job: Validación de comentario en el commit (depende de "build")
  commit_validation:
    runs-on: ubuntu-latest
    needs: build  # Dependencia del job "build"

    steps:
      # Clona el repositorio
      - name: 'Checkout code'
        uses: actions/checkout@v4

      # Verificar que el último commit tenga un comentario
      - name: 'Check commit message'
        run: |
          commit_message=$(git log -1 --pretty=%B)
          if [ -z "$commit_message" ]; then
            echo "Error: El commit debe tener un comentario."
            exit 1
          else
            echo "Commit válido con mensaje: $commit_message"
          fi

  # 3. Job: Validación del Pull Request (depende del job "commit_validation")
  validate_pr:
    runs-on: ubuntu-latest
    needs: commit_validation  # Dependencia del job "commit_validation"

    steps:
      # Clonar el repositorio
      - name: 'Checkout code'
        uses: actions/checkout@v4

      # Verificar que el PR tenga un comentario o título adecuado
      - name: 'Check Pull Request title or description'
        if: ${{ github.event_name == 'pull_request' }}  # Solo se ejecuta si es un evento de PR
        run: |
          pr_title="${{ github.event.pull_request.title }}"
          pr_body="${{ github.event.pull_request.body }}"
          
          # Verificar que el título o la descripción no estén vacíos
          if [ -z "$pr_title" ] && [ -z "$pr_body" ]; then
            echo "Error: El pull request debe tener un título o una descripción."
            exit 1
          else
            echo "El Pull Request tiene un comentario válido."


